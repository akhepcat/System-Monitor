####
#  sysmon.conf:  Configure/override the defaults for do-update

# used globally
RRDLIB=/srv/rrds
WEBROOT=/srv/http/sitestats

SCRIPTHOME=/root/bin/sysmon

SERVERNAME="poller"	# overload the hostname

# Which modules to run
PROGS="load.sh memory.sh netifs.sh disks.sh" # fping.sh speedtest.sh webpage.sh webspeed.sh sitestats.sh 

NOLOOPBACK=1		# any number other than 0 disables graphing the loopback interface

# Datastores! you must select at least one!
DONTRRD=0		# by default, we use RRD, but it can be *disabled* here

INFLUXURL=""		# if null, don't use InfluxDB
			# If you WANT to use Influx, the URL must be defined as the full 'write' api call, e.g.:
			# INFLUXURL="http://influx.example.com/write?db=MYDB&u=MYDBUSER&p=MYDBPASS"
			#
			# Yup, it's insecure, so caveat emptor and treat your config files gently

PARALLEL=0		# Set this to 1, and most scripts will run in parallel; otherwise all serially

####### per-module config

I2CBUS=1	# used in scd4x.sh / scd4x-i2c.py  

# used only in webspeed.sh - needs to be a complete sitemirror that only
# loads from a local site.   take a snapshot of a heavy webpage like cnn
# or something equivalent and edit the heck out of it so there are no
# external references.  Useful for graphing "normal" pageloads without
# transit providor variation.
SITECACHE="http://mysitemirror.local/www.cnn.com/"

# used only in webpage.sh
URLS="http://google.com/ http://bing.com/"

# used in do-updates to call fping.sh, if needed- also used to order the graphs in response.sh
PINGS="8.8.8.8 9.9.9.9"

# for dexcom.sh
dexcom_username=''
dexcom_password=''

# for resolver.sh  - best to limit to 2cdns, 2adns, and no more than 4 hosts
# 			to resolve (that's 16 queries!) for efficiency
CDNS="8.8.8.8,1.1.1.1"	# canonical DNS servers  (examples)
ADNS="208.67.222.222,9.9.9.9"	# Authoritative DNS servers  (examples)
RESOLVERS="www.google.com:${CDNS},${ADNS} www.cloudflare.com:${CDNS},${ADNS} www.opendns.com:${CDNS},${ADNS} www.quad9.net:${CDNS},${ADNS}"

# you may use a different binary, so change it here
# OOKLACMD="/usr/local/bin/ookla-speedtest --accept-license -f csv -b"	# you can add an optional '-s (servernum)' to the command to fix testing to a single site

#### Global timing defines
# Values are in seconds, for  "--end now --start end-${DATE}"
# yesterday, plus 4 hours
YESTERDAY=90000
# last week, plus a 6h
LASTWEEK=648000
# last month, plus a week
LASTMONTH=3234543
# last year, plus a month
LASTYEAR=34819200

########  Debugging
#  If 1, writes the start-to-stop delta runtime in /tmp/do-updates.run
TIMING=0
